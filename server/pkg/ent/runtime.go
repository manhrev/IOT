// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/manhrev/IOT/server/pkg/ent/data"
	"github.com/manhrev/IOT/server/pkg/ent/feed"
	"github.com/manhrev/IOT/server/pkg/ent/group"
	"github.com/manhrev/IOT/server/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	dataFields := schema.Data{}.Fields()
	_ = dataFields
	// dataDescRecordedAt is the schema descriptor for recorded_at field.
	dataDescRecordedAt := dataFields[1].Descriptor()
	// data.DefaultRecordedAt holds the default value on creation for the recorded_at field.
	data.DefaultRecordedAt = dataDescRecordedAt.Default.(time.Time)
	feedFields := schema.Feed{}.Fields()
	_ = feedFields
	// feedDescDataType is the schema descriptor for data_type field.
	feedDescDataType := feedFields[1].Descriptor()
	// feed.DefaultDataType holds the default value on creation for the data_type field.
	feed.DefaultDataType = feedDescDataType.Default.(uint16)
	// feedDescDisplayType is the schema descriptor for display_type field.
	feedDescDisplayType := feedFields[2].Descriptor()
	// feed.DefaultDisplayType holds the default value on creation for the display_type field.
	feed.DefaultDisplayType = feedDescDisplayType.Default.(uint16)
	// feedDescCreatedAt is the schema descriptor for created_at field.
	feedDescCreatedAt := feedFields[3].Descriptor()
	// feed.DefaultCreatedAt holds the default value on creation for the created_at field.
	feed.DefaultCreatedAt = feedDescCreatedAt.Default.(time.Time)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[1].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(time.Time)
}
